---
layout: post
title: LeetCode 45. Jump Game II
date: 2021-11-21 23:14:45 +0900
category: Algorithm
---
### LeetCode 45. Jump Game II

![](/assets/img/leetcode/45.png)

- 최대한 적게 뛰어 마지막까지 가기!!

<br><br>

>코드

```c#
public class Solution
{
    public int Jump(int[] nums)
    {
        int[] minCache = new int[nums.Length];

        for (int i = 0; i < minCache.Length; i++)
            minCache[i] = int.MaxValue;
        minCache[0] = 0;

        for (int i = 0; i < nums.Length; i++)
        {
            for (int j = 1; j <= nums[i]; j++)
            {
                if (i + j >= nums.Length) continue;
                minCache[i + j] = Math.Min(minCache[i + j], minCache[i] + 1);
            }
        }


        return minCache[nums.Length - 1];
    }
}
```

string 배열 첫번째가 가장 왼쪽에서 시작하기 때문에 반대로 length -1  인덱스에서 시작함

각자리를 곱하여 해당 자리수에 넣어주고 자리수에서 10을 넘으면 다음으로 넘겨줌

인덱스중 i + j - 1이 있기때문에 예외처리중요!

StringBuilder 로 반대로 더해주어 string 으로 보여줌!
---
layout: post
title: Refactoring 5
date: 2022-01-25 00:37:09 +0900
category: Refactoring
---
## 데이터 조직화

<br>

### 변수 쪼개기

변수에는 대입을 한번만 하기!

여러번 대입하면 혼란스러움

### 필드 이름 바꾸기

햇갈리지 않는 기가막히는 이름

### 파생 변수를 질의 함수로 바꾸기

### 참조를 값으로 바꾸기

아무곳이나 사용할 수 있어서 좋지만 특정 객체를 여러 객체에서 공유하는 경우는 쓰면 안됨

### 값을 참조로 바꾸기

객체를 공유하는 경우에는 참조로 바꾸어 사용

### 매직 리터럴 바꾸기

상수를 정의하거나 함수를 활용

<br>
<br>

## 조건부 로직 간소화

<br>

### 조건문 분해하기

조건식 부분이 복잡하다면 따로 때어서 함수로 만들고

조건이 만족햇을떄 로직도 함수로 호출

### 조건식 통합하기

조건식들을 논리 연산자로 결합하기

### 중첩 조건문을 보호구문으로 바꾸기

if else 어쩌구 하지말고

if(one)return 1;
if(two)return 2;
if(three)return 3;

### 조건부 로직을 다형성(클래스)로 바꾸기

```csharp
Switch(number)
case 1:
    return 1;
// 어쩌구 하는걸

class one
{
    getNumber(){return 1;}
}
```


---
layout: post
title: 렌더링
date: 2021-11-04 21:43:09 +0900
category: Graphics
---

# 렌더링

Edit > Project Setting > Graphics

에서 Graphic Setting 을 Tier 별로 설정가능

### Tier 설정

>*OpenGL ES 3을 지원하지 않는 기기, 아이폰5 이하는 1*
<br>
*OpenGL ES 3을 지원하는 기기는 2, 아이폰5s 이상은 2*
<br>
*Graphics.active-Tier를 활용하면 3*

변할 수도 있기 때문에 Unity Manual을 참고해야함!


<br>

포워드 렌더링과 디퍼드 렌더링의 차이는 씬을 렌더링 하는 파이프라인 구현 방식!

차이는 **라이팅을 처리**하는 방법!!!

# 디퍼드 렌더링

디퍼드 렌더링은 **많은 수의** 실시간 라이팅, **동적인 라이팅**을 비교적 좋은 성능으로 처리

PC나 콘솔게임에서 널리 사용됨!

> 디퓨즈, 노멀 , 스펙큘러, 스무스, 뎁스 등의 정보를 지오메트리 버퍼에 렌더링 한 후 라이팅을 처리하여 최종적으로 프레임 버퍼에 출력하여 씬의 렌더링을 완성

과정을 거쳐 완성이 지연되기 때문에 Deferred(지연된) 렌더링이다.

디퍼드 렌더링은 **지오메트리 패스와 라이팅패스가 분리**되어있다.

이렇게 될 경우 화면에 보이는 픽셀만 처리하기 때문에 불필요한 쉐이딩 연산을 절약함

많은 수의 실시간 라이트들의 드로우콜에 대한 부담을 줄임

하지만 지오메트리 버퍼를 처리하는데 높은 메모리 대역폭이 필요하여 **모바일 디바이스에서는 사용하기 어려움**

따라서 모바일 디바이스에서 디퍼드 렌더링은 권장되지 않음.


# 포워드 렌더링

모바일 기기에서는 포워드 렌더링 주로 사용.

오브젝트 및 동적 라이팅이 적으면 성능 부하가 적음

### 리얼타임 라이트와 드로우콜

라이트를 5개 사용해서 하나의 오브젝트를 그리는데 5번의 드로우콜이 소모됨!

GPU가 감당하는 폴리곤도 늘어남

만약 오브젝트가 10개라면 5 * 10 으로 50개의 드로우콜이 필요.

폴리곤이 100개라면 기존에 100개에서 100 * 5 * 10 개만큼의 폴리곤을 처리해야함!

리얼타임 라이트를 추가하는것은 그만큼 성능상의 큰 부담이 됨!

> 포워드 렌더링 기준! 디퍼드 렌더링은 다른방식으로 동작하여 해당 예시가 부합하지 않음

성능 부담을 줄이기 위해 라이트의 렌더 모드를 수정할 수 있음

**라이트 컴포넌트의 Render Mode 중 Auto, Important, Not Important** 중 선택할 수 있다

**Auto**는 Project Setting > Quality 에서 Pixel Light Count 수 만큼 Important를 추가로 사용함! 

> 여러개의 빛이 있다면 그중 밝은 빛을 Important로 사용함!
메인 디렉셔널 라이트가 디폴트로 픽셀당으로 처리되고 그 외에 빛 중 Auto가 4개 있고 Pixel Light Count가 4라면 모두 픽셀당으로 처리되어 실시간 픽셀당 처리되는 빛은 사실상 5개!! 



**Important**는 픽셀 당 연산하여 스펙큘러 처리 노멀맵 대응이 가능함 Pixel Light Count 수와 관계없이 모두 픽셀 당 처리 됨

**Not Important**는 픽셀로 처리되지 않고 버텍스나 구면조화함수를 활용하여 라이트를 처리하여 스펙큘러에 대응할 수 없음.


라이트 1개를 Important로 사용하고 4개는 Not Important로 사용하여 드로우콜이 한번으로 처리 가능

포인트 라이트나 스팟라이트는 범위에 따라 영향이 없기 때문에 잘 활용하면 드로우콜을 줄이면서 좋은 품질을 나타낼 수 있음

> 바운딩 박스 ( 복잡한 메쉬를 박스형태로 나타내는 바운드 ) 가 범위에 들어가면 영향이 생기므로 주의할것!